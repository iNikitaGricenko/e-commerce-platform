name: Java CI

on:
  push:
    branches:
      - main
      - dev
      - 'release/*'
  pull_request:
    branches:
      - main
      - dev
      - 'release/*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Start Docker Compose services
        run: docker-compose -f docker-compose-ci.yml up -d
        # Wait for services to be ready (example for PostgreSQL)
        # - run: docker-compose -f docker-compose-ci.yml exec -T postgres wait-for-it.sh -h localhost -p 5432 -t 30

      - name: Install dependencies
        run: mvn clean install -U -DskipTests

      - name: Check for dependency updates
        run: mvn versions:display-dependency-updates

      - name: Run tests
        run: mvn test -DfailIfNoTests=false

      - name: Shutdown Docker Compose services
        run: docker-compose -f docker-compose-ci.yml down

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

      - name: Upload code coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: target/site/jacoco/


      - name: Build with Maven
        run: mvn clean install --no-transfer-progress
